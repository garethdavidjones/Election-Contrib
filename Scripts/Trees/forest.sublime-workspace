{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"r",
				"rawRDD	param"
			],
			[
				"raw",
				"rawRDD	param"
			],
			[
				"main",
				"main_file	param"
			],
			[
				"zip",
				"zipCode"
			],
			[
				"test",
				"testErr	statement"
			],
			[
				"v_",
				"v_amount	statement"
			],
			[
				"contr",
				"contributors	statement"
			],
			[
				"ev",
				"evaluations	statement"
			],
			[
				"Co",
				"Col_Nums"
			],
			[
				"vec",
				"vectorized	statement"
			],
			[
				"num",
				"num_zeros	statement"
			],
			[
				"fu",
				"full_data	statement"
			],
			[
				"re",
				"reduce_individuals	function"
			],
			[
				"data",
				"data_cleaning	function"
			],
			[
				"ar",
				"Args"
			],
			[
				"for",
				"format	function"
			],
			[
				"a",
				"argv	instance"
			],
			[
				"pro",
				"processingTools	module"
			],
			[
				"col",
				"Col_Nums	statement"
			],
			[
				"can",
				"candidate_cfscore	statement"
			],
			[
				"fir",
				"first_filter	statement"
			],
			[
				"B",
				"BAD_ZIPS	statement"
			],
			[
				"de",
				"debug1	function"
			],
			[
				"label",
				"labeled_contributors	statement"
			],
			[
				"reu",
				"return	keyword"
			],
			[
				"MS",
				"MLUtils"
			],
			[
				"training",
				"trainingData	statement"
			],
			[
				"tran",
				"transformed	statement"
			],
			[
				"sva",
				"saveAsTextFile"
			],
			[
				"tans",
				"transformed	statement"
			],
			[
				"cs123",
				"cs123cluster9-m"
			],
			[
				"recent",
				"recipient_type"
			],
			[
				"sql",
				"sqlContext"
			],
			[
				"vecotr",
				"vectorized"
			],
			[
				"zi",
				"zipCode	statement"
			],
			[
				"min",
				"main_file"
			],
			[
				"la",
				"labeledPoint"
			],
			[
				"l",
				"labeledData"
			],
			[
				"ou",
				"output"
			],
			[
				"outp",
				"output_non_contributors"
			],
			[
				"labe",
				"labeled_contributors"
			],
			[
				"non",
				"non_contributors"
			],
			[
				"reduce",
				"reduce_individuals"
			],
			[
				"in",
				"individuals"
			],
			[
				"contribut",
				"contributors"
			],
			[
				"idn",
				"Individauls"
			],
			[
				"all",
				"all_individuals"
			],
			[
				"Label",
				"LabeledPoint"
			],
			[
				"com",
				"combined_evaluations"
			],
			[
				"eval",
				"evaluated_data"
			],
			[
				"evl",
				"evaluate_contribution"
			],
			[
				"ma",
				"main_file"
			],
			[
				"c",
				"cf_score"
			],
			[
				"v",
				"v_amount"
			],
			[
				"cycle",
				"cycles"
			],
			[
				"RE",
				"RECENT_G"
			],
			[
				"RECN",
				"Recent"
			],
			[
				"full",
				"full_count"
			],
			[
				"train",
				"train_count"
			],
			[
				"tr",
				"train_individuals"
			],
			[
				"tes",
				"test_individuals"
			],
			[
				"red",
				"reduceByKey"
			],
			[
				"v_c",
				"v_contr_cfscore"
			],
			[
				"b",
				"b_year"
			],
			[
				"con",
				"contributor_cfscore"
			],
			[
				"cf",
				"contributor_cfscore"
			],
			[
				"i",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"fe",
				"features"
			],
			[
				"va",
				"v_party"
			],
			[
				"cont",
				"contr_cfscore"
			],
			[
				"cs",
				"csv_parser"
			],
			[
				"grou",
				"groups"
			],
			[
				"am",
				"amt_y_val"
			],
			[
				"co",
				"count_x_val"
			],
			[
				"fil",
				"file_output"
			],
			[
				"pa",
				"partial_path"
			],
			[
				"coun",
				"count_sorted"
			],
			[
				"amt",
				"amt_density"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"AM",
				"Amt_Reduce"
			],
			[
				"Am",
				"Amt_Reduce"
			],
			[
				"A",
				"Amt_df"
			],
			[
				"C",
				"Count_Reduce"
			],
			[
				"CF_",
				"CF_Float_Filter"
			],
			[
				"CF",
				"CF_Amt_Filter"
			],
			[
				"amoun",
				"amount_filter"
			],
			[
				"f",
				"filter"
			],
			[
				"fro",
				"from_records"
			],
			[
				"qu",
				"quant_dom"
			],
			[
				"dom",
				"domain"
			],
			[
				"flo",
				"float_mapper"
			],
			[
				"state",
				"stateFill"
			],
			[
				"un",
				"Unemployment"
			],
			[
				"color",
				"color_ramp"
			],
			[
				"fun",
				"function"
			],
			[
				"emp",
				"empArr"
			],
			[
				"pthre",
				"pthread_cond_wait"
			],
			[
				"Count",
				"Count_Reduce"
			],
			[
				"O",
				"OUTPUT_PATH"
			],
			[
				"COun",
				"Count_df"
			],
			[
				"COntri",
				"contrbutions"
			],
			[
				"p",
				"pthread_join"
			],
			[
				"thd",
				"thd1"
			],
			[
				"pr",
				"print1s"
			],
			[
				"pt",
				"pthread"
			],
			[
				"bas",
				"base_col_num"
			],
			[
				"nu",
				"num_cols"
			],
			[
				"cur",
				"cur_col_num"
			],
			[
				"base",
				"base_row_num"
			],
			[
				"prg",
				"progress"
			],
			[
				"player",
				"player_2_move"
			],
			[
				"print",
				"printf	printf â€¦"
			],
			[
				"sp",
				"split"
			],
			[
				"add",
				"address"
			],
			[
				"Sp",
				"SparkConf"
			],
			[
				"cu",
				"cur_col_num"
			],
			[
				"pl",
				"player_2_move"
			],
			[
				"pla",
				"player_1_move"
			],
			[
				"n",
				"num_cols"
			],
			[
				"row",
				"row_num"
			],
			[
				"ba",
				"base_row_num"
			],
			[
				"m",
				"m"
			],
			[
				"game",
				"game_t"
			],
			[
				"gam",
				"game_t"
			],
			[
				"ga",
				"game_t"
			],
			[
				"adr",
				"address"
			],
			[
				"ch",
				"in_chicago"
			],
			[
				"ad",
				"addr"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Google Cloud Tutorial\n\n\nInitilize Our Brand of Cluster: \n    Only do in case of failure\n\n    gcloud dataproc clusters create cs123cluster9 --bucket cs123data --zone us-central1-a \\\n        --master-machine-type n1-standard-2 --master-boot-disk-size 100 --num-workers 2\n        --worker-machine-type n1-standard-1 --worker-boot-disk-size 60 \n        --scopes 'https://www.googleapis.com/auth/cloud-platform' --project cs123-1308 \n        --initialization-actions 'gs://cs123data/zeppelin.sh' --initialization-action-timeout 15m\nExecutorLostFailure (executor 87 exited caused by one of the running tasks) Reason: Container killed by YARN for ex\ngsutil commands\n    \n    //Copy All files in bucket directory with given ending to current directory\n    gsutil cp gs://my-bucket/*.txt .\n\n\ngcloud dataproc jobs submit pyspark --cluster cs123cluster9 \n\ngcloud dataproc jobs submit pyspark --cluster cs123-gareth --py-files processingTools.py \\\n vectorizer.py practice tester3\n\ngcloud compute ssh cs123cluster9-m\n\nInstructions: https://cloud.google.com/dataproc/cluster-web-interfaces\n\ngcloud compute ssh  --zone=us-east1-b \\\n  --ssh-flag=\"-D 1080\" --ssh-flag=\"-N\" --ssh-flag=\"-n\" cs123-highmem-m\n\nThen In A Seperate Terminal:\n\n      /usr/bin/google-chrome \\\n    --proxy-server=\"socks5://localhost:1080\" \\\n    --host-resolver-rules=\"MAP * 0.0.0.0 , EXCLUDE localhost\" \\\n    --user-data-dir=/tmp/\n\nNavigate To http://cs123cluster9-m:8080\n\n\nspark-submit vectorizer.py --py-files processingTools.py \n\n      /usr/bin/google-chrome \\\n    --proxy-server=\"socks5://localhost:1080\" \\\n    --host-resolver-rules=\"MAP * 0.0.0.0 , EXCLUDE localhost\" \\\n    --user-data-dir=/tmp/",
			"file": "/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt",
			"file_size": 1206,
			"file_write_time": 131092998184759117,
			"settings":
			{
				"buffer_size": 1656,
				"line_ending": "Unix"
			}
		},
		{
			"file": "processingTools.py",
			"settings":
			{
				"buffer_size": 18166,
				"line_ending": "Unix"
			}
		},
		{
			"file": "rf_donations.py",
			"settings":
			{
				"buffer_size": 1111,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nElec-Contrib Revamp Process\n    \n    Data Transformation\n\n\n    Data Cleaning\n        * Props on using string IO and CSV reader\n\n        * I think it makes more sense for the data to be loaded in the main file rather than in an auxiallry function\n\n        * How useful is the zip data?\n\n        * Should migrate to OHE method for the vetorized implementation\n        * Consider dataframe approach\n\n        * Should develope base line testing methods. \n            - Did the person contribute in an election?\n            - Guess a particular party.\n            - Would like to output an ordered list of probabilities",
			"settings":
			{
				"buffer_size": 615,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "# The dataframe implementation\nfrom pyspark.sql import SQLContext\nsqlContext = SQLContext(sc)\n\nfileName = \"\"\n\ndf = sqlContext.read.format('com.databricks.spark.csv').options(header='true', inferschema='true').load(fileName)\ndf.select('year', 'model').write.format('com.databricks.spark.csv').save('newcars.csv')",
			"file": "dataFrameProcessingTools.py",
			"file_size": -1,
			"file_write_time": -1,
			"settings":
			{
				"buffer_size": 311,
				"line_ending": "Unix"
			}
		},
		{
			"file": "vectorizer_v2.py",
			"settings":
			{
				"buffer_size": 5144,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Disable Package"
			],
			[
				"package control: ls",
				"Package Control: List Packages"
			],
			[
				"package control: re",
				"Package Control: Remove Package"
			],
			[
				"package control: ",
				"Package Control: List Packages"
			],
			[
				"package control: in",
				"Package Control: Install Package"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"Trim",
				"Trimmer: Trim trailing whitespace."
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Create Package File"
			],
			[
				"Package Control: Ins	",
				"Package Control: Install Package"
			],
			[
				"Packa	",
				"Package Control: Add Channel"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/media/gareth/Data/Election-Contrib/Scripts/Trees/decisionTree.py",
		"/media/gareth/Data/Election-Contrib/Scripts/Trees/processingTools.py",
		"/media/gareth/Data/Election-Contrib/Scripts/Trees/classification_random_forest.py",
		"/media/gareth/Project/Election-Contrib/Scripts/KNN/full_works.py",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/Homework 4",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/random_forest.py",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/decisionTree.py",
		"/home/gareth/Pictures/google-cloud-dataproc-metainfo%2F9adc2079-d170-43cb-848d-fe6f0e480458%2Fjobs%2Fe34c4656-3f35-401c-a70f-c2f4bd18bb68%2Fdriveroutput.000000000",
		"/home/gareth/Pictures/google-cloud-dataproc-metainfo%2F9adc2079-d170-43cb-848d-fe6f0e480458%2Fjobs%2Fe34c4656-3f35-401c-a70f-c2f4bd18bb68%2F_RECEIVED",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/amount_vectors.py",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/vectorizer.py",
		"/home/gareth/Pictures/Output%2FAmountVectors2%2Fpart-00000",
		"/home/gareth/Pictures/Output%2Ftester12%2Fpart-00035",
		"/home/gareth/Pictures/Output%2Ftester10%2Fpart-00017",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/processingTools.py",
		"/home/gareth/Pictures/Output%2Ftester3%2Fpart-00000",
		"/home/gareth/Downloads/Output%2FLabeledVectors3%2Fpart-02231",
		"/home/gareth/Downloads/Output%2FLabeledVectors2%2Fpart-00035",
		"/home/gareth/Downloads/Output%2FLabeledVectors2%2Fpart-00000",
		"/home/gareth/Downloads/Output%2FLabeledVectors%2Fpart-00035",
		"/home/gareth/Downloads/Output%2FTester4%2Fpart-00035",
		"/home/gareth/Downloads/Output%2FTester3%2Fpart-00017",
		"/home/gareth/Downloads/Output%2FMissingZips5%2Fpart-00000",
		"/home/gareth/Downloads/Output%2FVectorPractice1%2Fpart-00035",
		"/home/gareth/Downloads/Output%2FVectorPractice%2Fpart-00000",
		"/home/gareth/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/home/gareth/Downloads/Output%2FMissingZips%2Fpart-00001",
		"/home/gareth/Downloads/Data%2Fincome_cat_rdd%2Fpart-00000",
		"/home/gareth/Downloads/Data%2Fupdated_merger_3.csv",
		"/media/gareth/Project/Election-Contrib/Scripts/merger_3.py",
		"/media/gareth/Project/Election-Contrib/Scripts/clusterer.py",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/notes",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/dataframe.py",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-cs239-spr-16/project2/00-grade-project2-garethjones.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-cs239-spr-16/hw4/hw4q2.html",
		"/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt",
		"/home/gareth/Downloads/Output%2FVectorPractice%2Fpart-00000 (1)",
		"/home/gareth/Documents/Other/summerContacts",
		"/home/gareth/Downloads/Output%2Ffirst_attempt_2.txt%2F_SUCCESS",
		"/home/gareth/.cache/.fr-wjEYfL/al2010.sf1.prd.packinglist.txt",
		"/home/gareth/.cache/.fr-gtkUAj/al000012010.sf1",
		"/home/gareth/.cache/.fr-4a9lGR/ak0000120101.dp",
		"/home/gareth/.cache/.fr-6MO806/ak20101.dp.prd.packinglist.txt",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/forest.sublime-workspace",
		"/home/gareth/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/gareth/Desktop/Untitled Document",
		"/home/gareth/Desktop/API-keys",
		"/home/gareth/Documents/garethjones/pa2/reduce_game.c",
		"/home/gareth/Documents/garethjones/pa2/reduce_game.",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/amountExploration.py",
		"/home/gareth/Downloads/Output-checkpoint.txt-part-00000",
		"/media/gareth/Project/Election-Contrib/Scripts/sparkSQL.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/amtPlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/full_works.py",
		"/media/gareth/Project/Election-Contrib/Scripts/vectorizer.py",
		"/media/gareth/Project/Election-Contrib/Scripts/pipeline.py",
		"/media/gareth/Project/Election-Contrib/Scripts/debugger.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/RecipIdeoAllPlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/topindividuals.py",
		"/media/gareth/Project/Election-Contrib/full_works.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/contributorTypePlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/ideologyExploration.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/column_counter.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/ideoPlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/dataCleaner.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/ideology.py",
		"/media/gareth/Project/Election-Contrib/Scripts/csv_merger.py",
		"/home/gareth/.cache/.fr-oLzK6u/combine-csv.py",
		"/media/gareth/Project/Election-Contrib/Scripts/combine-csv.py.zip",
		"/home/gareth/.cache/.fr-pGswkI/combine-csv.py",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/C/pa3.c",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/Output/ideoOutput.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-cs239-spr-16/hw3/hw3.txt",
		"/home/gareth/Documents/Metrics/PS5Book.tex",
		"/home/gareth/Documents/STAT/FinalReport2.tex",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-longpham-cs239-spr-16/project2/student.js",
		"/home/gareth/Documents/STAT/Project 2.ipynb",
		"/media/gareth/Project/Election-Contrib/Scripts/ideology.py",
		"/media/gareth/Project/zepplinTunnel.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-longpham-cs239-spr-16/project2/Gjstudent.js",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-longpham-cs239-spr-16/project2/index.html",
		"/media/gareth/Project/Scripts/contribCleaner.py",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/C/linkedLists.c",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/C/concurrency.c",
		"/media/gareth/Project/Scripts/ideology.py",
		"/media/gareth/Project/Scripts/topindividuals.py",
		"/media/gareth/Project/Scripts/topIndustries.py",
		"/media/gareth/Project/Scripts/topcities.py",
		"/media/gareth/Project/Scripts/sparkSQL.py",
		"/media/gareth/Project/Scripts/wordcount.py",
		"/media/gareth/Project/Scripts/zepplinTunnel.txt",
		"/media/gareth/Project/Scripts/topcontributors.py",
		"/media/gareth/Project/Scripts/zipcode.py",
		"/home/gareth/Documents/STAT/Project2Evals/comments",
		"/home/gareth/Documents/DataVis/p2notes",
		"/media/gareth/Project/Scripts/zeppelin.sh",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/Lectures/multi-dim.txt",
		"/home/gareth/spark-1.6.1/python/pyspark/mllib/stat/_statistics.py",
		"/home/gareth/.awsconfig~",
		"/home/gareth/Documents/STAT/Report2.tex",
		"/home/gareth/Documents/STAT/Project2.tex",
		"/home/gareth/Documents/STAT/Project",
		"/home/gareth/Documents/STAT/Project 2_files/Project 2.tex",
		"/home/gareth/Documents/STAT/Project 2.txt",
		"/home/gareth/Documents/STAT/2.txt",
		"/home/gareth/.awsconfig",
		"/home/gareth/Downloads/google-cloud-sdk/README",
		"/home/gareth/.bashrc",
		"/home/gareth/Downloads/google-cloud-sdk/RE",
		"/home/gareth/awsconfig",
		"/home/gareth/.ipython/profile_pyspark/startup/00-pyspark-setup.py",
		"/home/gareth/.ipython/profile_pyspark/ipython_config.py",
		"/media/gareth/OS/Documents and Settings/Gareth/Documents/3Year/Spring/CMSC/C/pprocessing.txt",
		"/home/gareth/.ipython/profile_pyspark/startup/README",
		"/home/gareth/.ipython/profile_default/startup/README",
		"/home/gareth/.ipython/README",
		"/home/gareth/.jupyter/jupyter_notebook_config.py",
		"/home/gareth/.ipython/profile_default/db/dhist",
		"/home/gareth/.jupyter/migrated",
		"/home/gareth/Documents/garethjones/pa2/reduce_game.h",
		"/media/gareth/Project/Scripts/notes",
		"/home/gareth/Documents/garethjones/pa2/game.h",
		"/home/gareth/spark-1.6.1/examples/src/main/python/wordcount.py",
		"/home/gareth/Documents/lecure13.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Regression/Note/week6",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/15notes.txt",
		"/home/gareth/Documents/Project/Person.py",
		"/home/gareth/spark-1.6.1/examples/src/main/python/logistic_regression.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"testing",
			"csv",
			"contr_counter",
			"print",
			"stateI",
			"prepare",
			"1980",
			"cycle",
			"cycke",
			"gs",
			"PleaseWork",
			"savea",
			"://",
			"2012",
			"1984",
			"print",
			"false",
			"recipient_type",
			"zipData",
			"contributor_types",
			"recipient_type",
			"left",
			"50000",
			"ZipZACT",
			"[0-9]{5}",
			"94027",
			"[0-9]{5}",
			"94027",
			"[0-9]{5}",
			"+[0-9]",
			"transfomation",
			"labeled_non_contributors",
			"contributor_occupation",
			"transaction_id",
			"create_ve",
			"amt",
			"contr_cfscore",
			"line",
			"x",
			"v_party",
			">",
			"-",
			"x",
			"both",
			"gauss",
			"\\\\",
			"\\",
			"\\\\",
			",[",
			"[",
			"]",
			"[",
			"hat",
			"\\subsubsection",
			"\\hat",
			"Count_Reduce",
			"count",
			"the p-va",
			"empArr",
			"http",
			"spark_version",
			"subsection",
			"notebook",
			",",
			", ",
			"player_1_move",
			"remove",
			"counts",
			"check_dates",
			"4",
			"tab",
			"tabe",
			"scra"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"avg_contributed",
			"candidate_cfscore",
			"label",
			"<=",
			"",
			"line",
			"\\",
			"\\\\",
			"\\",
			"[",
			",[",
			" ",
			"\\subsubsection*",
			"count_density",
			"amt",
			"UnArr",
			"section*",
			"d;",
			"amount",
			"date_list"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1656,
						"regions":
						{
						},
						"selection":
						[
							[
								21,
								21
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"highlight_line": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "processingTools.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18166,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4410.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "rf_donations.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 615,
						"regions":
						{
						},
						"selection":
						[
							[
								615,
								615
							]
						],
						"settings":
						{
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "dataFrameProcessingTools.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 311,
						"regions":
						{
						},
						"selection":
						[
							[
								311,
								311
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										310,
										311
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										296,
										297
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "vectorizer_v2.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5144,
						"regions":
						{
						},
						"selection":
						[
							[
								2754,
								2754
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.503749330477,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 112.0
	},
	"pinned_build_system": "",
	"project": "forest.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt"
			],
			[
				"1",
				"~/Documents/lecure13.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"_vintageous_last_char_search_command": "vi_f",
		"_vintageous_last_character_search": "i",
		"_vintageous_reset_during_init": true,
		"vintage":
		{
			"_cmdline_cd": "/media/gareth/Project/Election-Contrib/Scripts/Forest"
		}
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
