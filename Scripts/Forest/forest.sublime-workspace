{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fir",
				"first_filter	statement"
			],
			[
				"B",
				"BAD_ZIPS	statement"
			],
			[
				"de",
				"debug1	function"
			],
			[
				"label",
				"labeled_contributors	statement"
			],
			[
				"reu",
				"return	keyword"
			],
			[
				"MS",
				"MLUtils"
			],
			[
				"training",
				"trainingData	statement"
			],
			[
				"tran",
				"transformed	statement"
			],
			[
				"sva",
				"saveAsTextFile"
			],
			[
				"tans",
				"transformed	statement"
			],
			[
				"zip",
				"zipCode	statement"
			],
			[
				"cs123",
				"cs123cluster9-m"
			],
			[
				"recent",
				"recipient_type"
			],
			[
				"sql",
				"sqlContext"
			],
			[
				"vecotr",
				"vectorized"
			],
			[
				"zi",
				"zipCode	statement"
			],
			[
				"test",
				"testData	statement"
			],
			[
				"min",
				"main_file"
			],
			[
				"la",
				"labeledPoint"
			],
			[
				"l",
				"labeledData"
			],
			[
				"ou",
				"output"
			],
			[
				"outp",
				"output_non_contributors"
			],
			[
				"labe",
				"labeled_contributors"
			],
			[
				"non",
				"non_contributors"
			],
			[
				"vec",
				"vectorized"
			],
			[
				"reduce",
				"reduce_individuals"
			],
			[
				"ev",
				"evaluate_transactions"
			],
			[
				"in",
				"individuals"
			],
			[
				"contribut",
				"contributors"
			],
			[
				"idn",
				"Individauls"
			],
			[
				"main",
				"main_file"
			],
			[
				"all",
				"all_individuals"
			],
			[
				"Label",
				"LabeledPoint"
			],
			[
				"com",
				"combined_evaluations"
			],
			[
				"eval",
				"evaluated_data"
			],
			[
				"evl",
				"evaluate_contribution"
			],
			[
				"data",
				"data_2012"
			],
			[
				"ma",
				"main_file"
			],
			[
				"v_",
				"v_avg"
			],
			[
				"c",
				"cf_score"
			],
			[
				"num",
				"num_general"
			],
			[
				"v",
				"v_amount"
			],
			[
				"cycle",
				"cycles"
			],
			[
				"RE",
				"RECENT_G"
			],
			[
				"RECN",
				"Recent"
			],
			[
				"full",
				"full_count"
			],
			[
				"train",
				"train_count"
			],
			[
				"tr",
				"train_individuals"
			],
			[
				"tes",
				"test_individuals"
			],
			[
				"red",
				"reduceByKey"
			],
			[
				"v_c",
				"v_contr_cfscore"
			],
			[
				"b",
				"b_year"
			],
			[
				"con",
				"contributor_cfscore"
			],
			[
				"cf",
				"contributor_cfscore"
			],
			[
				"i",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"fe",
				"features"
			],
			[
				"va",
				"v_party"
			],
			[
				"cont",
				"contr_cfscore"
			],
			[
				"contr",
				"contr_type"
			],
			[
				"cs",
				"csv_parser"
			],
			[
				"grou",
				"groups"
			],
			[
				"am",
				"amt_y_val"
			],
			[
				"co",
				"count_x_val"
			],
			[
				"re",
				"result"
			],
			[
				"fil",
				"file_output"
			],
			[
				"pa",
				"partial_path"
			],
			[
				"coun",
				"count_sorted"
			],
			[
				"amt",
				"amt_density"
			],
			[
				"if",
				"ifmain	if __name__ == '__main__'"
			],
			[
				"AM",
				"Amt_Reduce"
			],
			[
				"Co",
				"Count_Reduce"
			],
			[
				"Am",
				"Amt_Reduce"
			],
			[
				"A",
				"Amt_df"
			],
			[
				"C",
				"Count_Reduce"
			],
			[
				"CF_",
				"CF_Float_Filter"
			],
			[
				"CF",
				"CF_Amt_Filter"
			],
			[
				"amoun",
				"amount_filter"
			],
			[
				"f",
				"filter"
			],
			[
				"fro",
				"from_records"
			],
			[
				"qu",
				"quant_dom"
			],
			[
				"col",
				"color_scl"
			],
			[
				"dom",
				"domain"
			],
			[
				"flo",
				"float_mapper"
			],
			[
				"state",
				"stateFill"
			],
			[
				"un",
				"Unemployment"
			],
			[
				"color",
				"color_ramp"
			],
			[
				"fun",
				"function"
			],
			[
				"emp",
				"empArr"
			],
			[
				"pthre",
				"pthread_cond_wait"
			],
			[
				"Count",
				"Count_Reduce"
			],
			[
				"O",
				"OUTPUT_PATH"
			],
			[
				"COun",
				"Count_df"
			],
			[
				"COntri",
				"contrbutions"
			],
			[
				"p",
				"pthread_join"
			],
			[
				"thd",
				"thd1"
			],
			[
				"pr",
				"print1s"
			],
			[
				"pt",
				"pthread"
			],
			[
				"bas",
				"base_col_num"
			],
			[
				"nu",
				"num_cols"
			],
			[
				"cur",
				"cur_col_num"
			],
			[
				"base",
				"base_row_num"
			],
			[
				"prg",
				"progress"
			],
			[
				"player",
				"player_2_move"
			],
			[
				"print",
				"printf	printf …"
			],
			[
				"sp",
				"split"
			],
			[
				"add",
				"address"
			],
			[
				"Sp",
				"SparkConf"
			],
			[
				"cu",
				"cur_col_num"
			],
			[
				"pl",
				"player_2_move"
			],
			[
				"pla",
				"player_1_move"
			],
			[
				"n",
				"num_cols"
			],
			[
				"row",
				"row_num"
			],
			[
				"ba",
				"base_row_num"
			],
			[
				"m",
				"m"
			],
			[
				"game",
				"game_t"
			],
			[
				"gam",
				"game_t"
			],
			[
				"ga",
				"game_t"
			],
			[
				"adr",
				"address"
			],
			[
				"ch",
				"in_chicago"
			],
			[
				"ad",
				"addr"
			],
			[
				"inc",
				"inc	#include \"…\""
			],
			[
				"MR",
				"MRtopContributers"
			],
			[
				"fi",
				"fields"
			],
			[
				"mi",
				"main	main()"
			],
			[
				"vis",
				"visitees"
			],
			[
				"vi",
				"visitees"
			],
			[
				"visit",
				"visitors"
			],
			[
				"visi",
				"visitees"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt",
			"settings":
			{
				"buffer_size": 1206,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nimport pyspark\nfrom pyspark.mllib.regression import LabeledPoint\nfrom pyspark.mllib.tree import RandomForest\nfrom pyspark.mllib.util import MLUtils\nfrom pyspark.mllib.tree import DecisionTree, DecisionTreeModel\n\ndef main(input_file):\n\n    sc = pyspark.SparkContext(appName=\"DecisionTree\")\n\n    data = MLUtils.loadLabeledPoints(sc, input_file)\n\n    trainingData, testData, CVdata = data.randomSplit([0.70, 0.15, 0.15])\n    # Cache in memory for faster training\n    trainingData.cache()\n    testData.cache()\n    CVdata.cache()\n    num_features = len(trainingData.first().features)\n    base_feature_count = 9\n    features = {3:3, 4:7, 5:4, 6:2, 7:3, 8:3}\n    \n    for i in range(base_feature_count + 1, num_features + base_feature_count + 1):\n        features[i] = 10\n\n    tree_model = DecisionTree.trainClassifier(trainingData, numClasses=3, impurity='gini',\n                 categoricalFeaturesInfo=features, maxDepth=2, maxBins=10)\n\n    predictions = tree_model.predict(testData.map(lambda x: x.features))\n    labels_and_preds = testData.map(lambda x: x.label).zip(predictions)    \n\n    test_accuracy = labels_and_preds.filter(lambda (y, x): y == x).count() / float(testData.count())\n\n    print tree_model.toDebugString()\n    print \"Test accuracy: {}\".format(round(test_accuracy,4))\n\n\nif __name__ == '__main__':\n   \n\n    input_file = \"gs://cs123data/Output/WorkedBefore\"\n    main(input_file)\n",
			"file": "decisionTree.py",
			"file_size": 1389,
			"file_write_time": 131093014499938641,
			"settings":
			{
				"buffer_size": 1393,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Homework 4",
			"settings":
			{
				"buffer_size": 1609,
				"line_ending": "Unix"
			}
		},
		{
			"file": "vectorizer.py",
			"settings":
			{
				"buffer_size": 19581,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gareth/Downloads/Output%2FLabeledVectors%2Fpart-00035",
			"settings":
			{
				"buffer_size": 7976768,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n# http://www.forbes.com/sites/betsyschiffman/2015/11/10/full-list-most-expensive-zip-codes-in-2015/7/#5a128f'71290'7\n# top20zips = set(['94027', '11962', '10012', '81656', '10013', '33109', '94062', '91302', '81611', '94010', \n#                  '94022', '07620', '94920', '90210', '10065', '89413', '90402', '11976', '80111', '94957'])\n\n# next100zips = set(['11975', '94123', '93108', '02108', '90077', '11932', '10011', '33156', '90265', '09027', '10014', \n#                    '10006', '94028', '10024', '33143', '94301', '92662', '10007', '94920', '95030', '90272', '92067', \n#                    '92657', '11568', '94133', '91108', '95070', '10021', '81654', '06831', '95030', '92661', '90266', \n#                    '93920', '92625', '10023', '94024', '90049', '90069', '11024', '92651', '92091', '11930', '10001', \n#                    '94904', '10022', '94022', '10069', '06870', '11959', '91008', '10004', '98039', '02554', '34102', \n#                    '07976', '92014', '10580', '10003', '10577', '80113', '06870', '33149', '11231', '94306', '93953', \n#                    '02493', '06830', '90212', '94506', '90274', '06840', '11217', '32461', '83014', '81655', '94303', \n#                    '10075', '60043', '80121', '92118', '92660', '11765', '89402', '07078', '02574', '02116', '93066', \n#                    '90254', '06878', '92037', '11968', '90401', '02210', '93460', '96714', '91302', '02467', '94507', \n#                    '94025'])",
			"settings":
			{
				"buffer_size": 1458,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n    # zipData = sc.textFile(\"gs://cs123data/Auxillary/updated_merger_4.csv\")\n    # zipData = zipData.map(parse_zipcodes)\n\n    # zipData.cache()  # Look into doing this efficiently\n    \n    # Evaluate 2012 Testing Data\n    # print \"full data check\", full_data.take(2)\n    # data_2012 = full_data.filter(lambda x: x[0] == 2012)  # Should probably filter out other transaction types in datacleaning\n    # print \"Anything in there? \", data_2012.take(2)\n    # evaluated_data = data_2012.map(evaluate_transactions)  # Determine the label for each transaction\n    # print \"Raw eval\", evaluated_data.take(2)\n    # evaluations = evaluated_data.reduceByKey(lambda x, y: x)  # An RDD of Unique Keys\n    # print \"eval reduced\",  evaluations.take(2)\n\n\n\n    # merged = transformed.leftOuterJoin(zipData)\n    # # print \"Post Merged: \", merged.first()\n    # print \"Debug This \", merged.filter(lambda x: x[1][1] == None).map(lambda x: x[0]).saveAsTextFile(\"gs://cs123data/Output/MissingZips5\") \n    # bypass = merged.filter(lambda x: x[1][1] != None)\n    # # print \"By Pass Check: \", bypass.take(4)\n    # vectorized = bypass.map(finalize_vectors)\n    # # print \"Merge Cleaned: \", vectorized.take(2)\n    # vectorized = vectorized.filter(lambda x: x[1] != None)\n    # # Finalize Ouput Data\n    # non_contributors = vectorized.subtractByKey(evaluations)  # Non-Contributors Are Individuals Who Don't Appear in \n    # contributors = vectorized.join(evaluations)\n    # labeled_non_contributors = non_contributors.map(lambda x: LabeledPoint(0.0, x[1])) \n    # # print \"Non-Contr: \", labeled_non_contributors.first()\n    # labeled_contributors = contributors.map(lambda x: LabeledPoint(x[1][1], x[1][0]))\n    # # print \"Contr: \", labeled_contributors.first()\n    # combined = labeled_non_contributors.union(labeled_contributors)\n\n    # # print \"Combined\", combined.take(4)\n    # combined.saveAsTextFile(output_directory)",
			"settings":
			{
				"buffer_size": 1897,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Disable Package"
			],
			[
				"package control: ls",
				"Package Control: List Packages"
			],
			[
				"package control: re",
				"Package Control: Remove Package"
			],
			[
				"package control: ",
				"Package Control: List Packages"
			],
			[
				"package control: in",
				"Package Control: Install Package"
			],
			[
				"git",
				"Package Control: Install Package"
			],
			[
				"Trim",
				"Trimmer: Trim trailing whitespace."
			],
			[
				"Package Control: In",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Create Package File"
			],
			[
				"Package Control: Ins	",
				"Package Control: Install Package"
			],
			[
				"Packa	",
				"Package Control: Add Channel"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/gareth/Downloads/Output%2FTester4%2Fpart-00035",
		"/home/gareth/Downloads/Output%2FTester3%2Fpart-00017",
		"/home/gareth/Downloads/Output%2FMissingZips5%2Fpart-00000",
		"/home/gareth/Downloads/Output%2FVectorPractice1%2Fpart-00035",
		"/home/gareth/Downloads/Output%2FVectorPractice%2Fpart-00000",
		"/home/gareth/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
		"/home/gareth/Downloads/Output%2FMissingZips%2Fpart-00001",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/vectorizer.py",
		"/home/gareth/Downloads/Data%2Fincome_cat_rdd%2Fpart-00000",
		"/home/gareth/Downloads/Data%2Fupdated_merger_3.csv",
		"/media/gareth/Project/Election-Contrib/Scripts/merger_3.py",
		"/media/gareth/Project/Election-Contrib/Scripts/clusterer.py",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/notes",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/dataframe.py",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-cs239-spr-16/project2/00-grade-project2-garethjones.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-cs239-spr-16/hw4/hw4q2.html",
		"/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt",
		"/home/gareth/Downloads/Output%2FVectorPractice%2Fpart-00000 (1)",
		"/home/gareth/Documents/Other/summerContacts",
		"/home/gareth/Downloads/Output%2Ffirst_attempt_2.txt%2F_SUCCESS",
		"/home/gareth/.cache/.fr-wjEYfL/al2010.sf1.prd.packinglist.txt",
		"/home/gareth/.cache/.fr-gtkUAj/al000012010.sf1",
		"/home/gareth/.cache/.fr-4a9lGR/ak0000120101.dp",
		"/home/gareth/.cache/.fr-6MO806/ak20101.dp.prd.packinglist.txt",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/forest.sublime-workspace",
		"/media/gareth/Project/Election-Contrib/Scripts/Forest/decisionTree.py",
		"/home/gareth/.config/sublime-text-3/Packages/User/Anaconda.sublime-settings",
		"/home/gareth/Desktop/Untitled Document",
		"/home/gareth/Desktop/API-keys",
		"/home/gareth/Documents/garethjones/pa2/reduce_game.c",
		"/home/gareth/Documents/garethjones/pa2/reduce_game.",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/amountExploration.py",
		"/home/gareth/Downloads/Output-checkpoint.txt-part-00000",
		"/media/gareth/Project/Election-Contrib/Scripts/sparkSQL.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/amtPlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/full_works.py",
		"/media/gareth/Project/Election-Contrib/Scripts/vectorizer.py",
		"/media/gareth/Project/Election-Contrib/Scripts/pipeline.py",
		"/media/gareth/Project/Election-Contrib/Scripts/KNN/full_works.py",
		"/media/gareth/Project/Election-Contrib/Scripts/debugger.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/RecipIdeoAllPlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/topindividuals.py",
		"/media/gareth/Project/Election-Contrib/full_works.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/contributorTypePlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/ideologyExploration.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/column_counter.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/ideoPlot.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/dataCleaner.py",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/ideology.py",
		"/media/gareth/Project/Election-Contrib/Scripts/csv_merger.py",
		"/home/gareth/.cache/.fr-oLzK6u/combine-csv.py",
		"/media/gareth/Project/Election-Contrib/Scripts/combine-csv.py.zip",
		"/home/gareth/.cache/.fr-pGswkI/combine-csv.py",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/C/pa3.c",
		"/media/gareth/Project/Election-Contrib/Scripts/LookUps/Output/ideoOutput.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-cs239-spr-16/hw3/hw3.txt",
		"/home/gareth/Documents/Metrics/PS5Book.tex",
		"/home/gareth/Documents/STAT/FinalReport2.tex",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-longpham-cs239-spr-16/project2/student.js",
		"/home/gareth/Documents/STAT/Project 2.ipynb",
		"/media/gareth/Project/Election-Contrib/Scripts/ideology.py",
		"/media/gareth/Project/zepplinTunnel.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-longpham-cs239-spr-16/project2/Gjstudent.js",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/svn/garethjones-longpham-cs239-spr-16/project2/index.html",
		"/media/gareth/Project/Scripts/contribCleaner.py",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/C/linkedLists.c",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/C/concurrency.c",
		"/media/gareth/Project/Scripts/ideology.py",
		"/media/gareth/Project/Scripts/topindividuals.py",
		"/media/gareth/Project/Scripts/topIndustries.py",
		"/media/gareth/Project/Scripts/topcities.py",
		"/media/gareth/Project/Scripts/sparkSQL.py",
		"/media/gareth/Project/Scripts/wordcount.py",
		"/media/gareth/Project/Scripts/zepplinTunnel.txt",
		"/media/gareth/Project/Scripts/topcontributors.py",
		"/media/gareth/Project/Scripts/zipcode.py",
		"/home/gareth/Documents/STAT/Project2Evals/comments",
		"/home/gareth/Documents/DataVis/p2notes",
		"/media/gareth/Project/Scripts/zeppelin.sh",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Data Visulization/Lectures/multi-dim.txt",
		"/home/gareth/spark-1.6.1/python/pyspark/mllib/stat/_statistics.py",
		"/home/gareth/.awsconfig~",
		"/home/gareth/Documents/STAT/Report2.tex",
		"/home/gareth/Documents/STAT/Project2.tex",
		"/home/gareth/Documents/STAT/Project",
		"/home/gareth/Documents/STAT/Project 2_files/Project 2.tex",
		"/home/gareth/Documents/STAT/Project 2.txt",
		"/home/gareth/Documents/STAT/2.txt",
		"/home/gareth/.awsconfig",
		"/home/gareth/Downloads/google-cloud-sdk/README",
		"/home/gareth/.bashrc",
		"/home/gareth/Downloads/google-cloud-sdk/RE",
		"/home/gareth/awsconfig",
		"/home/gareth/.ipython/profile_pyspark/startup/00-pyspark-setup.py",
		"/home/gareth/.ipython/profile_pyspark/ipython_config.py",
		"/media/gareth/OS/Documents and Settings/Gareth/Documents/3Year/Spring/CMSC/C/pprocessing.txt",
		"/home/gareth/.ipython/profile_pyspark/startup/README",
		"/home/gareth/.ipython/profile_default/startup/README",
		"/home/gareth/.ipython/README",
		"/home/gareth/.jupyter/jupyter_notebook_config.py",
		"/home/gareth/.ipython/profile_default/db/dhist",
		"/home/gareth/.jupyter/migrated",
		"/home/gareth/Documents/garethjones/pa2/reduce_game.h",
		"/media/gareth/Project/Scripts/notes",
		"/home/gareth/Documents/garethjones/pa2/game.h",
		"/home/gareth/spark-1.6.1/examples/src/main/python/wordcount.py",
		"/home/gareth/Documents/lecure13.txt",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/Regression/Note/week6",
		"/media/gareth/OS/Users/Gareth/Documents/3Year/Spring/CMSC/15notes.txt",
		"/home/gareth/Documents/Project/Person.py",
		"/home/gareth/spark-1.6.1/examples/src/main/python/logistic_regression.py",
		"/home/gareth/spark-1.6.1/python/pyspark/profiler.py",
		"/home/gareth/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/gareth/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/gareth/Documents/Programming Assignments/task4.py",
		"/home/gareth/Documents/garethjones/pa2/bool_table.h",
		"/home/gareth/Documents/garethjones/pa2/game.c",
		"/home/gareth/Documents/STAT/Midterm Review",
		"/home/gareth/Documents/garethjones/pa2/double_table.c",
		"/home/gareth/Documents/garethjones/pa2/bool_table.c",
		"/home/gareth/Documents/garethjones/pa1/task4.py",
		"/home/gareth/Documents/garethjones/pa1/task3.py",
		"/home/gareth/Documents/garethjones/pa1/task2.py",
		"/home/gareth/Documents/garethjones/pa1/task1.py",
		"/home/gareth/Documents/Programming Assignments/task3.py",
		"/home/gareth/Documents/Programming Assignments/task2.py",
		"/home/gareth/Documents/Programming Assignments/task1.py",
		"/home/gareth/Documents/Programming Assignments/whoisvisiting.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"1980",
			"cycle",
			"cycke",
			"gs",
			"PleaseWork",
			"savea",
			"://",
			"2012",
			"1984",
			"print",
			"false",
			"recipient_type",
			"zipData",
			"contributor_types",
			"recipient_type",
			"left",
			"50000",
			"ZipZACT",
			"[0-9]{5}",
			"94027",
			"[0-9]{5}",
			"94027",
			"[0-9]{5}",
			"+[0-9]",
			"transfomation",
			"labeled_non_contributors",
			"contributor_occupation",
			"transaction_id",
			"create_ve",
			"amt",
			"contr_cfscore",
			"line",
			"x",
			"v_party",
			">",
			"-",
			"x",
			"both",
			"gauss",
			"\\\\",
			"\\",
			"\\\\",
			",[",
			"[",
			"]",
			"[",
			"hat",
			"\\subsubsection",
			"\\hat",
			"Count_Reduce",
			"count",
			"the p-va",
			"empArr",
			"http",
			"spark_version",
			"subsection",
			"notebook",
			",",
			", ",
			"player_1_move",
			"remove",
			"counts",
			"check_dates",
			"4",
			"tab",
			"tabe",
			"scra"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"avg_contributed",
			"candidate_cfscore",
			"label",
			"<=",
			"",
			"line",
			"\\",
			"\\\\",
			"\\",
			"[",
			",[",
			" ",
			"\\subsubsection*",
			"count_density",
			"amt",
			"UnArr",
			"section*",
			"d;",
			"amount",
			"date_list"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1206,
						"regions":
						{
						},
						"selection":
						[
							[
								998,
								998
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"highlight_line": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "decisionTree.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1393,
						"regions":
						{
						},
						"selection":
						[
							[
								657,
								657
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_complete": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"highlight_line": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 52
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Homework 4",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1609,
						"regions":
						{
						},
						"selection":
						[
							[
								76,
								76
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "vectorizer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19581,
						"regions":
						{
						},
						"selection":
						[
							[
								1606,
								1606
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"highlight_line": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 5777.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "vectorizer.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19581,
						"regions":
						{
						},
						"selection":
						[
							[
								19418,
								19418
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"highlight_line": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true,
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 0
							}
						},
						"translation.x": 0.0,
						"translation.y": 5982.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/gareth/Downloads/Output%2FLabeledVectors%2Fpart-00035",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7976768,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1890.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1458,
						"regions":
						{
						},
						"selection":
						[
							[
								1458,
								1458
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1897,
						"regions":
						{
						},
						"selection":
						[
							[
								45,
								45
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "",
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"vintage":
							{
								"_vintageous_glue_until_normal_mode": false,
								"action": null,
								"action_count": "",
								"mode": "mode_normal",
								"motion": null,
								"motion_count": "",
								"must_capture_register_name": false,
								"normal_insert_count": "1",
								"partial_sequence": "",
								"register": "\"",
								"sequence": "",
								"xpos": 44
							}
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.503749330477,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 112.0
	},
	"pinned_build_system": "",
	"project": "forest.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"/media/gareth/Project/Election-Contrib/Scripts/GCloudNotes.txt"
			],
			[
				"1",
				"~/Documents/lecure13.txt"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
		"_vintageous_last_char_search_command": "vi_f",
		"_vintageous_last_character_search": "i",
		"_vintageous_reset_during_init": true,
		"vintage":
		{
			"_cmdline_cd": "/media/gareth/Project/Election-Contrib/Scripts/Forest"
		}
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
